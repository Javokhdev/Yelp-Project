basePath: /api/v1
definitions:
  domain.Business:
    properties:
      address:
        type: string
      category:
        type: string
      contactInfo:
        type: string
      description:
        type: string
      hours:
        description: 'e.g., JSON: {"Monday": "9am-5pm", "Tuesday": "Closed", ...}'
        type: string
      id:
        description: UUID
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      ownerID:
        description: Foreign key to User (business owner)
        type: string
      photos:
        description: URLs to business photos
        items:
          type: string
        type: array
    type: object
  domain.Category:
    properties:
      id:
        description: UUID
        type: string
      name:
        type: string
    type: object
  domain.Review:
    properties:
      businessID:
        description: Foreign key to Business
        type: string
      comment:
        type: string
      id:
        description: UUID
        type: string
      photos:
        description: URLs to review photos
        items:
          type: string
        type: array
      rating:
        description: 1 to 5 stars
        type: integer
      userID:
        description: Foreign key to User
        type: string
    type: object
  domain.User:
    properties:
      bio:
        type: string
      email:
        type: string
      id:
        description: UUID
        type: string
      name:
        type: string
      password:
        description: Store hashed passwords
        type: string
      profilePic:
        description: URL to profile picture
        type: string
    type: object
info:
  contact: {}
  description: API documentation for Yalp
  title: Yalp API
  version: "1.0"
paths:
  /auth:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all users
      tags:
      - auth
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a user
      tags:
      - auth
  /auth/{userID}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a user
      tags:
      - auth
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a user by ID
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
  /business:
    get:
      consumes:
      - application/json
      description: Get all businesses
      produces:
      - application/json
      responses:
        "200":
          description: Succefully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all businesses
      tags:
      - Business
    post:
      consumes:
      - application/json
      description: Create a new business
      parameters:
      - description: Business details
        in: body
        name: business
        required: true
        schema:
          $ref: '#/definitions/domain.Business'
      produces:
      - application/json
      responses:
        "200":
          description: Succefully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new business
      tags:
      - Business
    put:
      consumes:
      - application/json
      description: Update a business
      parameters:
      - description: Business details
        in: body
        name: business
        required: true
        schema:
          $ref: '#/definitions/domain.Business'
      produces:
      - application/json
      responses:
        "200":
          description: Succefully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a business
      tags:
      - Business
  /business/{businessID}:
    delete:
      consumes:
      - application/json
      description: Delete a business
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Succefully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a business
      tags:
      - Business
    get:
      consumes:
      - application/json
      description: Get a business by ID
      parameters:
      - description: Business ID
        in: path
        name: businessID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Succefully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a business by ID
      tags:
      - Business
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update a category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update a category
      tags:
      - categories
  /categories/{categoryID}:
    delete:
      consumes:
      - application/json
      description: Delete a category
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get a category by ID
      parameters:
      - description: Category ID
        in: path
        name: categoryID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a category by ID
      tags:
      - categories
  /review:
    get:
      consumes:
      - application/json
      description: Get all reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Review'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all reviews
      tags:
      - Review
    post:
      consumes:
      - application/json
      description: Create a new review
      parameters:
      - description: Review details
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/domain.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Review'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a new review
      tags:
      - Review
    put:
      consumes:
      - application/json
      description: Update a review
      parameters:
      - description: Review details
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/domain.Review'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Review'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a review
      tags:
      - Review
  /review/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Review'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a review
      tags:
      - Review
    get:
      consumes:
      - application/json
      description: Get a review by ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Review'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a review by ID
      tags:
      - Review
swagger: "2.0"
